
########        PROPERTIES ACTUALLY USED IN application.properties      #######################

# Define Hibernate Naming Strategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Show all queries
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
#logging.level.org.hibernate.type=trace
#logging.level.org.hibernate.stat=debug

# connect to local mysql db : $ mysql -uroot -ppassword gms
#spring.jpa.hibernate.ddl-auto=none
#spring.datasource.url=jdbc:mysql://localhost:3306/gms
#spring.datasource.username=root
#spring.datasource.password=password

#################################

spring:
    datasource:
        url: jdbc:mysql://localhost:3306/spring_social?useSSL=false
        username: root
        password: password

    jpa:
        show-sql: true
        hibernate:
            ddl-auto: none
            naming:
                naming-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
                physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        properties:
            hibernate:
                format_sql: true

    security:
        oauth2:
            client:
                registration:
                    google:
                        clientSecret: qDjIjPpTxYDROzC5Igx8wfuTpTQR1bAYnGWVFtP-
                        clientId: 0oa1dpr2nwBOVfu6Z357
                        redirectUriTemplate: "http://localhost:8080/oauth2/callback/google"
                        scope:
                        - email
                        - profile

app:
    auth:
        tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
        tokenExpirationMsec: 864000000
    oauth2:
        # After successfully authenticating with the OAuth2 Provider,
        # we'll be generating an auth token for the user and sending the token to the
        # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
        # We're not using cookies because they won't work well in mobile clients.
        authorizedRedirectUris:
            - http://localhost:3000/oauth2/redirect
            - myandroidapp://oauth2/redirect
            - myiosapp://oauth2/redirect

logging:
    level:
        org:
            hibernate:
                type=trace\
                stat=debug


########        PROPERTIES NOT USED IN application.properties BUT KEPT FOR LEARNING PURPOSE      #######################

# Enabling H2 Console
#spring.h2.console.enabled=true
#Turn Statistics on
#spring.jpa.properties.hibernate.generate_statistics=true

# Define Hibenate Naming Strategy
#spring.jpa.hibernate.naming_strategy=org.hibernate.cfg.DefaultNamingStrategy
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# SQL statements and parameters
#log4j.logger.org.hibernate.SQL=debug
#log4j.logger.org.hibernate.type.descriptor.sql=trace

#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=SPRING_DATASOURCE_URL
#spring.datasource.username=SPRING_DATASOURCE_USERNAME
#spring.datasource.password=SPRING_DATASOURCE_PASSWORD